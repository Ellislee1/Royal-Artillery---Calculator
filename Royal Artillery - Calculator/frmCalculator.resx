<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="openFileDialogImportGun.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 18</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFIy8Au///ACx/mzwve5N4IneZRgdi
        kAoPeqoAAAEGAAAAAAAAAAAAAAEIABN7pwAJYIsLI3eYRi97k3gsf5s8nv//AAUhLQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAYZMAADFdBQJVgxQPYIQdEGOGGglafwwAC+kCV3JYnFlg
        Rv9HcHf0P32KsR15oUcCT3kIDW2cABJwmQAGT3YIIXibRzt9jrFIbnT0W11A/1ZyWZoAAPQCBluHDBFh
        hBoQYIEdBlR9FAAxXAUAYZcAAAAEAAAAAAAkepQAEV1/FCtrfWI6bXWsTmpf0ktpZN9FZ2fbOWl1xSxr
        f5BaXzWvVVxI/21hRf9ya0j/WG1c8TF3jbAldZRxJXWUcTB2jbBHc3jxbGxS/21iRf9eVDD/WV42rits
        g5A9aW7FRWpq20prZt9Ja2bSOW12rClrf2EQXYETH3uaAB9qhjE7bna6XG9e/G9uT/+EZzH/dGZB/2Fg
        T/9XYFT/SGJe/1R5af9Ualb4SXJ27nJnQ/9+XSf/UF5W/0BfZP9BXmD/VGBR/1drZf9sbVH/VHBm7ldp
        UPhTeWv/RGVo/1RlXP9faVj/bGlM/31oOv90bUr/ZmhN/DxtdLoeaocxNHSFy0dmZf9kalX/XHBj/Vlu
        XexMb2vZSm1q105pYutZWkL9XGVK/1ZfQNspZ3dLPnuHo09uZ/RbVT3/T1NG/1ZLMf9VXk7/S29u9Dh9
        kaIpZ3VMVl9A21xlSf9UX0/9RW1x60VuctdHb3HZUG5q7GNtWf1kZVH/VVZC/zdwfslNe3PmTmFS/z5p
        bd8qbH16Fl5tSQ1RXTAPVF8uGWBwRy1ocY0/X1jlMmVr2w9HTSwCNDUcHWZ8ai9rec4yZG/6OGBh+i1s
        e80eZnppBTMxHA9GSy0yZGncQF9Y5C1ncY0aYG1HEFRcLg9RVjAYXWpJKWx+ekBnaeBNXlX/UHhu5kVh
        T0RIb2XkSHl05yNxV6kngDHSKYMo1Sd9JNUpfiXUKoMn1Cd+NOsnfDXyKHso2Cd4JtUjbiDTIGkn4CFt
        OPkgbDn5IWon4CJqINMhaiTWIWkl2CJtMvIicDHrJXQl1CRxItMjbyXVJ3061SZ+Nc8fZFGlSHl05kJw
        beQ9X1hDFXahEz96gb1XhnfZKXN0Yyt4gdApfXH/J3k5+imBJfEwkin6LYom/i6MJf4thib/IWgy/xpf
        Tv8gfID/JIub/ySKmf8jg3//JHhE/yl9I/4qfiT+KHoj/Sl/Jf4qgS/+KHc5/jSSev88tcb/LqGr7yN8
        i7pTg3fpQHqAuxV2nxIAAAoAK4iqHymLsCAAImABMnOVNjF9p7Ioc5bpG2JpkRliNVgdai1jGmE5jxpo
        a/Ihf6L/JIm1/CB1nbkfaY2fIWyPnyB1n7khhKz+HHd63RxkN4UbYUOXHWZYwyl3feZHr8P2T83q/kC4
        1rUuoMBwH4WlYiF9nDAsiqseAAAAAAAAAAAAAAAAAAAAAA4RBAA1eZQALmBwDCxui0AogaeEJH+rjBRZ
        iDsSXIWmJISs/yyOs+cfXXd6IWF+bx1ff08laoRPIGF+byFifnwefa7hFmiUpRxcd4U2j6rCVMjj9FvU
        7vxJs8meLnuJFjuarQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKHOGACZm
        cQUqhKM/InidshxwmPszlbj9I2eDuB1dekskaYVuHV9+hiJlgoUjaINsHFt3TyBnh88cfKvnNZ2/0U7N
        8f9Tzev4Sau/jS5qcg42fosAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQIBAGP//wAZYYOOKoWo/zWPrvkbX4CMIWWBbSFlgpocdJrcHnaY3CFvkb0nj7rxJ5C48yGC
        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
        D///4Af//+AH///wD////n////5///////8=
</value>
  </data>
</root>